apply plugin: 'com.android.application'

android {

    compileSdkVersion = 33
    buildToolsVersion = "30.0.2"

    defaultConfig {
        applicationId "com.gnrc.telehealth"
        minSdkVersion 21
        targetSdkVersion 33


        versionCode 4002
        versionName "4.0.2"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
//        ndk {
//            abiFilters "armeabi-v7a","arm64-v8a" //,"x86","x86_64"
//        }

//        splits {
//
//            // Configures multiple APKs based on ABI.
//            abi {
//
//                // Enables building multiple APKs per ABI.
//                enable true
//
//                // By default all ABIs are included, so use reset() and include to specify that we only
//                // want APKs for x86 and x86_64.
//
//                // Resets the list of ABIs that Gradle should create APKs for to none.
//                reset()
//
//                // Specifies a list of ABIs that Gradle should create APKs for.
//                include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
//
//                // Specifies that we do not want to also generate a universal APK that includes all ABIs.
//                universalApk false
//            }
//        }


    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }

        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }

    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_7
//        targetCompatibility JavaVersion.VERSION_1_7
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
//include "x86", "x86_64","armeabi-v7a","arm64-v8a"
//ext.abiCodes = ['armeabi-v7a': 1, 'x86': 2, 'x86_64': 3, 'arm64-v8a': 4]
//import com.android.build.OutputFile
//
//android.applicationVariants.all { variant ->
//
//    // Assigns a different version code for each output APK
//    // other than the universal APK.
//    variant.outputs.each { output ->
//
//        // Stores the value of ext.abiCodes that is associated with the ABI for this variant.
//        def baseAbiVersionCode =
//                // Determines the ABI for this variant and returns the mapped value.
//                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
//
//        // Because abiCodes.get() returns null for ABIs that are not mapped by ext.abiCodes,
//        // the following code does not override the version code for universal APKs.
//        // However, because we want universal APKs to have the lowest version code,
//        // this outcome is desirable.
//        if (baseAbiVersionCode != null) {
//
//            // Assigns the new version code to versionCodeOverride, which changes the version code
//            // for only the output APK, not for the variant itself. Skipping this step simply
//            // causes Gradle to use the value of variant.versionCode for the APK.
//            output.versionCodeOverride =
//                    baseAbiVersionCode * 1000 + variant.versionCode
//        }
//    }
//}
dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:appcompat-v7:28.0.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    def room_version = "2.5.0-alpha03"
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    //implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //implementation 'com.google.android.material:material:1.0.0-rc01'
    implementation 'com.google.android.material:material:1.4.0'
    implementation project(':commonlib')
    implementation project(':mobilertc')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.jsoup:jsoup:1.10.2'
    implementation 'com.google.android.play:core:1.10.3'
    implementation "com.android.volley:volley:1.2.1"
    implementation 'com.squareup.picasso:picasso:2.8'
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    /*    testImplementation "android.arch.persistence.room:testing:$room_version"
        implementation "androidx.room:room-paging:$room_version"*/
}
